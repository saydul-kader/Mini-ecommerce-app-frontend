{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\"; // Reducers\n\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { getProductsReducer, getProductDetailsReducer } from \"./reducers/productReducers\";\nconst reducer = combineReducers({\n  cart: cartReducer,\n  getProducts: getProductsReducer,\n  getProductDetails: getProductDetailsReducer\n});\nconst middleware = [thunk];\nconst cartItemsInLocalStorage = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : [];\nconst INITIAL_STATE = {\n  cart: {\n    cartItems: cartItemsInLocalStorage\n  }\n};\nconst store = createStore(reducer, INITIAL_STATE, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/KaderZ/Desktop/mini-mern-ecommerce-project-master/frontend/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","cartReducer","getProductsReducer","getProductDetailsReducer","reducer","cart","getProducts","getProductDetails","middleware","cartItemsInLocalStorage","localStorage","getItem","JSON","parse","INITIAL_STATE","cartItems","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,kBADF,EAEEC,wBAFF,QAGO,4BAHP;AAKA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,IAAI,EAAEJ,WADwB;AAE9BK,EAAAA,WAAW,EAAEJ,kBAFiB;AAG9BK,EAAAA,iBAAiB,EAAEJ;AAHW,CAAD,CAA/B;AAMA,MAAMK,UAAU,GAAG,CAACT,KAAD,CAAnB;AAEA,MAAMU,uBAAuB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAC5BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAD4B,GAE5B,EAFJ;AAIA,MAAMG,aAAa,GAAG;AACpBT,EAAAA,IAAI,EAAE;AACJU,IAAAA,SAAS,EAAEN;AADP;AADc,CAAtB;AAMA,MAAMO,KAAK,GAAGpB,WAAW,CACvBQ,OADuB,EAEvBU,aAFuB,EAGvBd,mBAAmB,CAACF,eAAe,CAAC,GAAGU,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeQ,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// Reducers\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  getProductsReducer,\n  getProductDetailsReducer,\n} from \"./reducers/productReducers\";\n\nconst reducer = combineReducers({\n  cart: cartReducer,\n  getProducts: getProductsReducer,\n  getProductDetails: getProductDetailsReducer,\n});\n\nconst middleware = [thunk];\n\nconst cartItemsInLocalStorage = localStorage.getItem(\"cart\")\n  ? JSON.parse(localStorage.getItem(\"cart\"))\n  : [];\n\nconst INITIAL_STATE = {\n  cart: {\n    cartItems: cartItemsInLocalStorage,\n  },\n};\n\nconst store = createStore(\n  reducer,\n  INITIAL_STATE,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}